@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web.Models

@{
	Layout = null;
	var homePage = Model.Root();
}

<!DOCTYPE html>
<html lang="en">
<head>
	@{
        var title = String.Empty;
        title = Model.Value<string>("websiteTitle",
            fallback: Fallback.ToDefaultValue, defaultValue: homePage.Value<string>("websiteTitleHome"));

        var description = String.Empty;
        description = Model.Value<string>("metaDescription",
            fallback: Fallback.ToDefaultValue, defaultValue: homePage.Value<string>("metaDescriptionHome"));

        var temp = Model.Value<string[]>("metaKeywords",
            fallback: Fallback.ToDefaultValue, defaultValue: homePage.Value<string[]>("metaKeywordsHome"));

        var keywords = String.Join(",", temp);

        bool show = true;  
	}
    
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta name="description" content="@description" />
    <meta name="keywords" content="@keywords" />
	<title>@title</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">

	@{
		var favicon = homePage.Value<IPublishedContent>("favicon");
		if(favicon != null)
		{
			<link rel="shortcut icon" type="image/ico" href="@favicon.Url">;
		}
	}

	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
	<script src="https://use.fontawesome.com/releases/v5.0.8/js/all.js"></script>
	<link href="\UI\css\main.css" rel="stylesheet">
</head>
<body>


    <!-- Navigation -->
    <nav class="navbar navbar-expand-md navbar-light pt-0 pb-0">
        <div class="container-fluid">
            <a class="navbar-brand" href="@homePage.Url">
                @{
                    var brandIcon = homePage.Value<IPublishedContent>("brandIcon");
                    if (brandIcon != null)
                    {
                        <img src="@brandIcon.Url?width=100px" />;
                    }
                }
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                    @{
                        var productSelection = homePage
                                        .ChildrenOfType("productPage")
                                        .Where(x => x.IsVisible())
                                        .OrderByDescending(x => x.SortOrder);

                        var faqSelection = homePage
                                        .ChildrenOfType("fAQPage")
                                        .Where(x => x.IsVisible());

                        foreach (var item in faqSelection)
                        {
                            <li class="nav-item padding-right">
                                <a class="nav-link" href="@item.Url">@item.Name</a>
                            </li>
                            ;
                        }

                        foreach (var item in productSelection)
                        {
                            <li class="nav-item padding-right">
                                <a class="nav-link" href="@item.Url">@item.Name</a>
                            </li>
                            ;
                        }
                    }


                    @{
                        if (!Umbraco.MemberIsLoggedOn())
                        {
                            <li class="nav-item padding-right">
                                <div class="login-div btn btn-dark" data-toggle="modal" data-target="#exampleModal">
                                    <a class="nav-link">Kundportal</a>
                                </div>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item padding-right">
                                <div class="login-div btn btn-dark">
                                    <a class="nav-link" href="/dynamaster/">Kundportal</a>
                                </div>
                            </li>
                        }


                        <!--TODO Standard Page, ErrorPage LoginPage,
                            Portalsida, -->

                    }
                </ul>
            </div>
        </div>
    </nav>

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Login</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @{ Html.RenderAction("RenderLogin", "Member");}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    @*<button type="button" class="btn btn-primary">Save Changes</button>*@
                </div>
            </div>
        </div>
    </div>


    <div class="container pl-0">
        <div class="row">
            <div class="col-8">
                @(Umbraco.RenderMacro("Breadcrumb"))
            </div>
        </div>
    </div>



    @RenderBody()



    <!-- Form -->

    @{
        if (Model.Value<bool>("displayForm"))
        {
            <div class="container">
                @{ Html.RenderAction("RenderForm", "ContactSurface", new { pageId = Model.Id });}
            </div>
        }
    }

    @{ Html.RenderAction("RenderLogin", "Member");}


    <!-- Footer -->
    <footer>
        <div class="container-fluid padding-all">
            <div class="row text-center">
                <div class="col-md-6">
                    <ul class="hours-ul">
                        <h4>Öppettider</h4>
                        <hr class="hr-80">
                        @{
                            if (homePage.HasValue("informationHours"))
                            {
                                <div class="width-70 mx-auto">@(homePage.Value("informationHours"))</div>
                                ;
                            }
                        }
                        <hr class="hr-80">
                        @{
                            if (homePage.Value<String[]>("businessHours").Length > 0)
                            {
                                foreach (var item in homePage.Value<String[]>("businessHours"))
                                {
                                    <li>@item</li>
                                    ;
                                }
                            }
                        }
                        <hr class="hr-80">
                    </ul>
                </div>
                <div class="col-md-6">
                    <ul class="support-ul">
                        <h4>Online Support</h4>
                        <hr class="hr-80">
                        <strong>Vi kan kontaktas via:</strong>
                        @{
                            var link = homePage.Value<Link>("supportformLink");
                            if (link != null)
                            {
                                <li><i class="fas fa-file-alt margin-right"></i><a href="@link.Url" target="@link.Target">Kontaktformulär</a></li>
                                ;
                            }
                            if (homePage.HasValue("contactPhone"))
                            {
                                <li><i class="fas fa-phone margin-right"></i>Telefon: <a href="tel:@(homePage.Value("contactPhone"))">@(homePage.Value("contactPhone"))</a></li>
                                ;
                            }
                            if (homePage.HasValue("contactEmail"))
                            {
                                <li><i class="fas fa-envelope margin-right"></i>Email: <a href="mailto:@(homePage.Value("contactEmail"))">@(homePage.Value("contactEmail"))</a></li>
                                ;
                            }
                        }
                        <hr class="hr-80">
                    </ul>
                </div>
            </div>
        </div>
    </footer>

</body>
</html>